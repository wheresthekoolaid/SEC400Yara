#!/bin/bash


##Gui System for Sec440 Makes ease of Use for yara##
##Created by Matthew lantagne##

##Welcome Message##
function main {
echo "############################"
echo "Yara Interface For SysAdmins"
echo "############################"
echo ""
sleep 1
echo "########################################"
echo "This Program Utilizes a Menu System and"
echo "Can be Navigated With the Number Keys."
echo ""
echo "Ensuring Packages Insalled"
echo "########################################"
echo ""
sleep 2
##Checks if winexe is installed##
##If no prompts user to install it##
echo "############################"
echo "Checking for winexe pkg"
echo "############################"
if ! dpkg -s winexe  > /dev/null; then
	clear
	echo -e "Command not found! Install? (y/n) \c"
	read $InstallPkg
	if [[ "$Installpkg" -eq "y" ]] ;then
		wget http://download.opensuse.org/repositories/home:/uibmz:/opsi:/opsi40-testing/xUbuntu_12.04/amd64/winexe_1.00.1-1_amd64.deb
		sudo dpkg --install winexe_1.00.1-1_amd64.deb
   	fi
fi
sleep 2
echo ""
echo "####################"
echo "All Packages Present"
echo "####################"
sleep 2
clear
MainMenu
}

function MainMenu (){
while true
do

##Resetting Triggers Variables##
trigger=""
chron=""
emailt=""
customT=""

##First Menu##
echo "#########################"
echo "Target System Is:"
echo "1. Linux System"
echo "2. Windows System"
echo "3. exit Program"
echo "#########################"

read Opt



##Switchcase for Opt

case "$Opt" in
        1)
                clear
                LinuxSystem
        ;;
        2)
                clear
                WindowsSystem

        ;;
        3)
                exit
        ;;
	*)
		echo "Invalid Opperator"
	;;
esac

##Reset To Clear Screen

echo ""

echo "Press Key to continue"

read ResetKey

clear

done
}


##########################
##LINUX SYSTEM INTERFACE##
##########################
function LinuxSystem() {
trigger="Linux"
echo "###########################"
echo "Yara For Linux System (SSH)"
echo "###########################"

echo ""
echo "Target System IPaddress or Hostname:"
read target
echo "System Username:"
read Uname
echo "System Password:"
read Pword

##Reset To Clear Screen
echo "Press Key to continue"
read ResetKey
clear

##Move To Options##
ScannerStyle
}

############################
##Windows SYSTEM INTERFACE##
############################
function WindowsSystem() {
trigger="Windows"
echo "################################"
echo "Yara For Windows System (WinExe)"
echo "################################"

echo ""
echo "Target System IPaddress or Hostname:"
read target
echo "System Username:"
read Uname
echo "System Password:"
read Pword

##Reset To Clear Screen
echo "Press Key to continue"
read ResetKey
clear

##Move To Options##
ScannerStyle
}


#########################
##Scanner Style Handler##
#########################
function ScannerStyle (){
echo "#########################"
echo "Yara Options"
echo "1. Run Scan Now"
echo "2. Create Chron Job"
echo "3. Exit to Main Menu"
echo "#########################"
read Opt

##Switchcase for Opt
case "$Opt" in
        1)
		clear
		RunScan
        ;;
        2)
                clear
                ChronJob

        ;;
        3)
                clear
		MainMenu
        ;;
        *)
                echo "Invalid Opperator"
        ;;
esac
}

#####################
##Chron Job Handler##
#####################
function ChronJob() {

echo "#################################################################"
echo "Daily Scanner Choice"
echo "1. CC and SSN Scan"
echo "2. Custom Rule (Future Implimentation, Current Routes to Inavlid)"
echo "3. Exit to Main Menu"
echo "################################################################"
chron="y"
read Opt

##Switchcase for Opt
case "$Opt" in
        1)
		echo "Time HH:MM:SS"
		read TimeoScan
        	CcSsnScan
	;;
        3)
                clear
                MainMenu
        ;;
        *)
                echo "Invalid Opperator"
        ;;
esac
}

#############################################
##Run CcSsnScan This is going to look Nasty##
#############################################

function CcSsnScan() {
##If Statement for Windows or Linux System
##breaks from there to either make a chron job/scheduled task or just run scan.

if [[ "$trigger" -eq "Linux" ]] ;then
	##Then start doing the magic
	if [[ "$chron" -eq "y" ]] ;then
		echo "		##Then Create Chron Instead of run Scan"
		##Stepts to Proceed
                ##Make Connection
                ##Check if Yara Exists (same Lines as Above)
                ##apt-get Install
                ##Enter Chron Job Print to file after sanatize output
	else
		echo "	##Run Scan As though Normal"
                ##Stepts to Proceed
                ##Make Connection
                ##Check if Yara Exists (same Lines as Above)
                ##apt-get Install
                ##Enter Chron Job Print output
	fi

else
	##Then Start Magic with winEXE
	if [[ "$chron" -eq "y" ]] ;then
		echo "	##Then Create Chron Instead of run scan"
		##Stepts to Proceed
		##Make Connection
		##Check if Yara Exists
		##Download yara (PS.Script On GitHub)
		##Enter Chron Job Print to file after sanatize output
	else
		echo" ##Run Scan As Though Normal"
		##Steps to Proceed
		##Make Connection
		##Download yara if not there (PS.Script on Github)
		##Run Scan Print Output
	fi
fi
}




clear
main

